package com.mini.loginBackend.service.impl;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import com.mini.loginBackend.dto.AdminDTO;
import com.mini.loginBackend.dto.UserDTO;
import com.mini.loginBackend.entity.Admin;
import com.mini.loginBackend.entity.User;
import com.mini.loginBackend.repository.AdminRepository;
import com.mini.loginBackend.service.AdminService;

@Service
public class AdminServiceImpl implements AdminService{

	@Autowired
	private AdminRepository adminRepository;
	
	@Autowired
//	private UserService userService;

//	@Override
//	public String signUp(AdminDTO adminDTO) {
//		Optional<Admin> optionalAdminDb = adminRepository.findUserByEmailId(adminDTO.getEmailId());
//		if(optionalAdminDb.isPresent()) {
//			return "EmailId Already Exists !";
//		}else {
//			if(adminDTO.getRole().equals("admin")) {
//				Admin admin = new Admin();
//				BeanUtils.copyProperties(adminDTO, admin);
//				adminRepository.save(admin);
//				return "Admin Created Successful !!!";
//			}
//			return "Cannot create user! Try as admin";
//		}
//	}

//	@Override
//	public ResponseEntity<String> adminLogin(AdminDTO adminDTO) {
//		Optional<Admin> optionalAdminDb = adminRepository.findUserByEmailId(adminDTO.getEmailId());
//		if(optionalAdminDb.isPresent()) {
//			Admin dbAdmin = optionalAdminDb.get();
//			if(adminDTO.getPassword().equals(dbAdmin.getPassword())) {
//				if(adminDTO.getRole().equals("admin")) {
//					return ResponseEntity.ok("Admin Login Success");
//				} else {
//					return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Invalid Login");
//				}
//			} else {
//				return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Invalid Login Credentials");
//			}
//		}
//		return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Admin not found!");
//	}

	@Override
	public List<AdminDTO> getAllAdmins() {
		List<Admin> admins = adminRepository.findAll();
		List<AdminDTO> adminDTO = new ArrayList<>();
		 for(Admin admin: adminDTO) {
			 AdminDTO getAllAdmin = new AdminDTO();
			 BeanUtils.copyProperties(admin, getAllAdmin);
			 adminDTO.add(getAllAdmin);
		 }
		 return adminDTO;
	}

//	@Override
//	public List<UserDTO> getAllUsers() {
//		List<UserDTO> allUsers = userService.getAllUsers();
//		return allUsers;
//	}
	
	
}
;